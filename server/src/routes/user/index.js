"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const auth_1 = __importDefault(require("./auth"));
const flashcard_1 = __importDefault(require("./flashcard"));
const handle_async_1 = require("../../middlewares/handle_async");
const require_auth_1 = require("../../middlewares/require_auth");
const set_flashcard_1 = __importDefault(require("./set_flashcard"));
const test_1 = __importDefault(require("./test"));
const result_1 = __importDefault(require("./result"));
const result_item_1 = __importDefault(require("./result_item"));
const payment_1 = __importDefault(require("./payment"));
const aichat_1 = __importDefault(require("./aichat"));
const learning_set_1 = __importDefault(require("./learning_set"));
const learning_flashcard_1 = __importDefault(require("./learning_flashcard"));
const profile_1 = __importDefault(require("./profile"));
const provider_1 = __importDefault(require("./provider"));
const rate_limit_1 = require("../../middlewares/rate_limit");
const toeic_registration_1 = __importDefault(require("./toeic_registration"));
const toeic_test_session_1 = __importDefault(require("./toeic_test_session"));
const toeic_testing_1 = __importDefault(require("./toeic_testing"));
const exam_result_1 = __importDefault(require("./exam_result"));
const bridge_nest_1 = __importDefault(require("./bridge_nest"));
const routerU = express_1.default.Router();
routerU.use("/auth", rate_limit_1.RateLimitInstance.createLowLimitMiddleware(), auth_1.default);
routerU.use("/flashcard", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), flashcard_1.default);
routerU.use("/set-flashcard", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), set_flashcard_1.default);
routerU.use("/result", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), result_1.default);
routerU.use("/result-item", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), result_item_1.default);
routerU.use("/test", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), test_1.default);
routerU.use("/payment", rate_limit_1.RateLimitInstance.createLowLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), payment_1.default);
routerU.use("/ai-chat", rate_limit_1.RateLimitInstance.createLowLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), aichat_1.default);
routerU.use("/learning-set", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), learning_set_1.default);
routerU.use("/learning-flashcard", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), learning_flashcard_1.default);
routerU.use("/profile", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), profile_1.default);
routerU.use("/provider", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), provider_1.default);
routerU.use("/test-registration", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), toeic_registration_1.default);
routerU.use("/toeic-test-session", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), toeic_test_session_1.default);
routerU.use("/toeic-testing", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), toeic_testing_1.default);
routerU.use("/exam-result", rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), exam_result_1.default);
routerU.use('/bridge-nest', rate_limit_1.RateLimitInstance.createHighLimitMiddleware(), (0, handle_async_1.handleAsync)(require_auth_1.requireAuth), bridge_nest_1.default);
exports.default = routerU;
